#!/bin/bash

CORETYPES_HEADER=coreTypes.h
CORETYPES_STRINGIFY_C=coreTypesStringify.h
CORETYPES_STRINGIFY_CPP=coreTypesStringify.hh

echo '// This header is generated by vuo/type/generateCoreTypesHeader.sh.' > $CORETYPES_HEADER

echo '// This header is generated by vuo/type/generateCoreTypesHeader.sh.' > $CORETYPES_STRINGIFY_C
echo '#define VUO_CORE_TYPES_STRINGIFY_C(variable) \' >> $CORETYPES_STRINGIFY_C

echo '// This header is generated by vuo/type/generateCoreTypesHeader.sh.' > $CORETYPES_STRINGIFY_CPP
echo '#define VUO_CORE_TYPES_STRINGIFY_CPP \' >> $CORETYPES_STRINGIFY_CPP

PARENTHESES=""

for header in $* ; do
	TYPE=${header%.h}

	echo "#include \"$header\"" >> $CORETYPES_HEADER

	echo "__builtin_choose_expr(__builtin_types_compatible_p(__typeof__(variable), $TYPE), ${TYPE}_getSummary(FORCETYPE(variable, $TYPE)), \\" >> $CORETYPES_STRINGIFY_C
	PARENTHESES=")$PARENTHESES"

	if [[ $header != *VuoWindowReference.h ]] ; then
		echo "char *toString($TYPE variable) { return ${TYPE}_getSummary(variable); } \\" >> $CORETYPES_STRINGIFY_CPP
	fi

	if [[ $header != VuoDictionary_* ]] && [[ $header != "VuoMathExpressionList.h" ]] ; then
		TYPE=VuoList_${header%.h}

		echo "#include \"VuoList_$header\"" >> $CORETYPES_HEADER

		echo "__builtin_choose_expr(__builtin_types_compatible_p(__typeof__(variable), $TYPE), ${TYPE}_getSummary(FORCETYPE(variable, $TYPE)), \\" >> $CORETYPES_STRINGIFY_C
		PARENTHESES=")$PARENTHESES"

		if [[ $header != *VuoWindowReference.h ]] ; then
			echo "char *toString($TYPE variable) { return ${TYPE}_getSummary(variable); } \\" >> $CORETYPES_STRINGIFY_CPP
		fi
	fi
done

echo "strdup(\"(unknown variable type)\")$PARENTHESES" >> $CORETYPES_STRINGIFY_C
echo "" >> $CORETYPES_STRINGIFY_CPP
