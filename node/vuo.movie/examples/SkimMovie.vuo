/**
* @file
* Skims through a movie when you move the mouse left or right. 
*
* @copyright Copyright © 2012–2014 Kosada Incorporated.
* This code may be modified and distributed under the terms of the MIT License.
* For more information, see http://vuo.org/license.
*/

digraph G
{
Convert2DPointToReal [type="vuo.type.point2d.real.x" version="1.0.0" label="Convert 2D Point to Real|<refresh>refresh\l|<xy>xy\l|<done>done\r|<x>x\r" pos="635,365"];
DecodeMovieImage [type="vuo.movie.decodeImage" version="1.0.0" label="Decode Movie Image|<refresh>refresh\l|<movieURL>movieURL\l|<frameTime>frameTime\l|<done>done\r|<image>image\r" pos="732,176" fillcolor="violet"];
FireOnStart [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<done>done\r|<started>started\r" pos="182,72" fillcolor="yellow"];
GetMovieInfo [type="vuo.movie.info" version="1.0.0" label="Get Movie Info|<refresh>refresh\l|<movieURL>movieURL\l|<done>done\r|<duration>duration\r" pos="368,348" fillcolor="violet"];
HoldValue [type="vuo.hold.VuoText" version="1.0.0" label="Hold Value|<refresh>refresh\l|<initialValue>initialValue\l|<newValue>newValue\l|<done>done\r|<heldValue>heldValue\r" pos="343,98" fillcolor="cyan" _initialValue="\"chess.mov\"" _newValue="\"\""];
ReceiveMouseMoves [type="vuo.mouse.move" version="1.0.0" label="Receive Mouse Moves|<refresh>refresh\l|<window>window\l|<modifierKey>modifierKey\l|<done>done\r|<movedTo>movedTo\r" pos="290,255" fillcolor="yellow" _modifierKey="\"any\"" _movedTo_eventThrottling="drop"];
RenderImageToWindow [type="vuo.image.render.window" version="1.0.0" label="Render Image to Window|<refresh>refresh\l|<image>image\l|<done>done\r|<showedWindow>showedWindow\r|<requestedFrame>requestedFrame\r" pos="920,176" fillcolor="green" _requestedFrame_eventThrottling="drop"];
Scale [type="vuo.math.scale" version="1.0.0" label="Scale|<refresh>refresh\l|<value>value\l|<start>start\l|<end>end\l|<scaledStart>scaledStart\l|<scaledEnd>scaledEnd\l|<done>done\r|<scaledValue>scaledValue\r" pos="536,255" fillcolor="cyan" _start="-1.000000" _end="1.000000" _scaledStart=""];

Convert2DPointToReal:x -> Scale:value;
DecodeMovieImage:image -> RenderImageToWindow:image;
FireOnStart:started -> HoldValue:refresh;
GetMovieInfo:duration -> Scale:scaledEnd;
HoldValue:heldValue -> DecodeMovieImage:movieURL;
HoldValue:heldValue -> GetMovieInfo:movieURL;
ReceiveMouseMoves:movedTo -> Convert2DPointToReal:xy;
RenderImageToWindow:showedWindow -> ReceiveMouseMoves:window;
Scale:scaledValue -> DecodeMovieImage:frameTime;
}
