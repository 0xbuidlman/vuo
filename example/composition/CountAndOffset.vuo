/**
 * @file
 * This composition outputs a count and an offset count every second.
 *
 * @copyright Copyright © 2012—2013 Kosada Incorporated.
 * This code may be modified and distributed under the terms of the MIT License.
 * For more information, see http://vuo.org/license.
 */

digraph G
{
Add1 [type="vuo.math.add.integer" version="100" label="Add|<refresh>refresh\l|<terms>terms\l|<done>done\r|<sum>sum\r" pos="231,141"];
ConvertIntegertoText1 [type="vuo.type.integer.text" version="100" label="Convert Integer to Text|<refresh>refresh\l|<integer>integer\l|<done>done\r|<text>text\r" pos="349,22"];
ConvertIntegertoText2 [type="vuo.type.integer.text" version="100" label="Convert Integer to Text|<refresh>refresh\l|<integer>integer\l|<done>done\r|<text>text\r" pos="348,127"];
Count1 [type="vuo.math.count.integer" version="100" label="Count|<refresh>refresh\l|<increment>increment\l|<decrement>decrement\l|<done>done\r|<count>count\r" pos="200,18" _increment="1" _decrement="1"];
DisplayConsoleWindow [type="vuo.console.window" version="100" label="Display Console Window|<refresh>refresh\l|<writeLine>writeLine\l|<done>done\r|<typedLine>typedLine\r|<typedWord>typedWord\r|<typedCharacter>typedCharacter\r" pos="460,18"];
DisplayConsoleWindow2 [type="vuo.console.window" version="100" label="Display Console Window|<refresh>refresh\l|<writeLine>writeLine\l|<done>done\r|<typedLine>typedLine\r|<typedWord>typedWord\r|<typedCharacter>typedCharacter\r" pos="460,141"];
FirePeriodically1 [type="vuo.time.firePeriodically" version="100" label="Fire Periodically|<refresh>refresh\l|<seconds>seconds\l|<done>done\r|<fired>fired\r" pos="39,-10" _seconds="1"];
MakeList [type="vuo.list.make.2.VuoInteger" version="100" label="Make List|<refresh>refresh\l|<item1>item1\l|<item2>item2\l|<done>done\r|<list>list\r" pos="170,152" _item2="1000"];

Add1:sum -> ConvertIntegertoText2:integer;
ConvertIntegertoText1:text -> DisplayConsoleWindow:writeLine;
ConvertIntegertoText2:text -> DisplayConsoleWindow2:writeLine;
Count1:count -> ConvertIntegertoText1:integer;
Count1:count -> MakeList:item1;
FirePeriodically1:fired -> Count1:increment;
MakeList:list -> Add1:terms;
}
